namespace = kiyo_event_trade

# Trigger set max trade routes
event = {
	id = kiyo_event_trade.100
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_country = {
			is_country_type = default
			is_gestalt = no
			NAND = {
				has_country_flag = kiyo_trade_has_base_values
				has_country_flag = kiyo_trade_has_max_trade_routes_tech_1
				has_country_flag = kiyo_trade_has_max_trade_routes_tech_2
				has_country_flag = kiyo_trade_has_max_trade_routes_tech_3
				has_country_flag = kiyo_trade_has_max_trade_routes_tech_4
			}
		}
	}
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = default
				is_gestalt = no
				NAND = {
					has_country_flag = kiyo_trade_has_base_values
					has_country_flag = kiyo_trade_has_max_trade_routes_tech_1
					has_country_flag = kiyo_trade_has_max_trade_routes_tech_2
					has_country_flag = kiyo_trade_has_max_trade_routes_tech_3
					has_country_flag = kiyo_trade_has_max_trade_routes_tech_4
				}
			}
			country_event = { id = kiyo_event_trade.101 }
		}
	}
}

# Trigger set max trade routes
country_event = {
	id = kiyo_event_trade.101
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_country_type = default
		is_gestalt = no
		NAND = {
			has_country_flag = kiyo_trade_has_base_values
			has_country_flag = kiyo_trade_has_max_trade_routes_tech_1
			has_country_flag = kiyo_trade_has_max_trade_routes_tech_2
			has_country_flag = kiyo_trade_has_max_trade_routes_tech_3
			has_country_flag = kiyo_trade_has_max_trade_routes_tech_4
		}
	}
	
	immediate = {
		if = { limit = { NOT = { has_country_flag = kiyo_trade_has_base_values } }
			set_variable = { which = kiyo_trade_max_trade_routes value = 4 }
			set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 4 }
			set_country_flag = kiyo_trade_has_base_values
		}
		if = { limit = { has_technology = tech_luxuries_1 NOT = { has_country_flag = kiyo_trade_has_max_trade_routes_tech_1 } }
			change_variable = { which = kiyo_trade_max_trade_routes value = 1 }
			change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
			set_country_flag = kiyo_trade_has_max_trade_routes_tech_1
		}
		if = { limit = { has_technology = tech_luxuries_2 NOT = { has_country_flag = kiyo_trade_has_max_trade_routes_tech_2 } }
			change_variable = { which = kiyo_trade_max_trade_routes value = 1 }
			change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
			set_country_flag = kiyo_trade_has_max_trade_routes_tech_2
		}
		if = { limit = { has_technology = tech_interstellar_economics NOT = { has_country_flag = kiyo_trade_has_max_trade_routes_tech_3 } }
			change_variable = { which = kiyo_trade_max_trade_routes value = 1 }
			change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
			set_country_flag = kiyo_trade_has_max_trade_routes_tech_3
		}
		if = { limit = { has_technology = tech_galactic_markets NOT = { has_country_flag = kiyo_trade_has_max_trade_routes_tech_4 } }
			change_variable = { which = kiyo_trade_max_trade_routes value = 1 }
			change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 3 }
			set_country_flag = kiyo_trade_has_max_trade_routes_tech_4
		}
	}
}

# Trade Fleet orbiting owned planet
fleet_event = {
	id = kiyo_event_trade.0
	title = kiyo_event_trade.0.title
	desc = kiyo_event_trade.0.desc
	picture = GFX_evt_galactic_market
	location = root
	is_triggered_only = yes
	
	option = { name = GOOD }
}

# Trade Fleet orbiting second planet (NOT belonging to trade route owner)
fleet_event = {
	id = kiyo_event_trade.1
	title = kiyo_event_trade.1.title
	desc = kiyo_event_trade.1.desc
	picture = GFX_evt_galactic_market
	location = root
	#is_triggered_only = yes
	
	trigger = {
		exists = owner
		exists = orbit
		orbit = {
			exists = owner
			owner = {
				is_country_type = default
				NOR = {
					is_same_value = root.owner
					has_closed_borders = root.owner
					is_at_war_with = root.owner
				}
			}
		}
		any_owned_ship = { is_ship_size = kiyo_trade }
		NOT = {
			has_fleet_flag = kiyo_event_trade_deleted_cargo
			has_fleet_flag = kiyo_trade_start@ORBIT
			has_fleet_flag = kiyo_trade_has_trade_route
		}
		owner = { any_owned_planet = { root = { has_fleet_flag = kiyo_trade_start@PREV } } }
		if = {
			limit = {
				owner = {
					any_owned_planet = {
						prev = {
							any_owned_fleet = {
								NOT = { is_same_value = root }
								has_fleet_flag = kiyo_trade_start@PREVPREV
							}
						}
					}
				}
			}
			NOT = {
				orbit = {
					root.owner = {
						any_owned_fleet = {
							NOT = { is_same_value = root }
							has_fleet_flag = kiyo_trade_end@PREVPREV
						}
					}
				}
			}
		}
	}
	
	immediate = {
		set_fleet_flag = kiyo_trade_end@ORBIT
		orbit = {
			save_event_target_as = kiyo_trade_end
			prev.owner = {
				every_owned_ship = { limit = { fleet = { is_same_value = root } }
					prevprev.owner = { add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } }
				}
			}
		}
		owner = {
			random_owned_planet = { limit = { root = { has_fleet_flag = kiyo_trade_start@PREV } }
				save_event_target_as = kiyo_trade_start
				root = { set_name = "[PREV.GetName] - [ORBIT.GetName] Cargo (To [PREV.GetName])" }
			}
		}
		queue_actions = { orbit_planet = event_target:kiyo_trade_start }
		set_fleet_flag = kiyo_trade_has_trade_route
		set_fleet_flag = kiyo_trade_ending
		
		# Prevent expire event from firing immediately after starting a trade route
		set_fleet_flag = kiyo_trade_start_expired
		set_fleet_flag = kiyo_trade_end_expired
		
		owner = { save_event_target_as = kiyo_trade_trader }	# For Notification Localization
		event_target:kiyo_trade_end = { owner = { country_event = { id = kiyo_event_trade.2 } } }
	}
	
	option = { name = GOOD }
}

# Notify Trade Target of Trade Route to their planet
country_event = {
	id = kiyo_event_trade.2
	title = kiyo_event_trade.2.title
	desc = kiyo_event_trade.2.desc
	picture = GFX_evt_galactic_market
	location = event_target:kiyo_trade_end
	is_triggered_only = yes
	
	option = { name = OK }
}

# Trade Fleet trading back and forth
fleet_event = {
	id = kiyo_event_trade.3
	hide_window = yes
	#is_triggered_only = yes
	
	trigger = {
		owner = { any_owned_planet = { root = { has_fleet_flag = kiyo_trade_start@PREV } } }
		any_country = { is_country_type = default any_owned_planet = { root = { has_fleet_flag = kiyo_trade_end@PREV } } }
		NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
		has_fleet_flag = kiyo_trade_has_trade_route
		if = { limit = { exists = orbit }
			OR = {
				AND = {
					has_fleet_flag = kiyo_trade_starting
					orbit = { root = { has_fleet_flag = kiyo_trade_end@PREV } }
				}
				AND = {
					has_fleet_flag = kiyo_trade_ending
					orbit = { root = { has_fleet_flag = kiyo_trade_start@PREV } }
				}
			}
		}
		else = { always = no }
	}
	
	immediate = {
		owner = { random_owned_planet = { limit = { root = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start } }
		random_planet = { limit = { root = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end }
	
		switch = { trigger = has_fleet_flag
			kiyo_trade_starting = {
				kiyo_trade_calculate_resources = yes
				remove_fleet_flag = kiyo_trade_starting
				set_fleet_flag = kiyo_trade_ending
				
				# Refresh cargo
				set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 }
				remove_fleet_flag = kiyo_trade_start_expired
				
				# Queue action in case people mess with things
				set_name = "[kiyo_trade_start.GetName] - [kiyo_trade_end.GetName] Cargo (To [kiyo_trade_start.GetName])"
				queue_actions = { orbit_planet = event_target:kiyo_trade_start }
			}
			kiyo_trade_ending = {
				kiyo_trade_calculate_resources = yes
				remove_fleet_flag = kiyo_trade_ending
				set_fleet_flag = kiyo_trade_starting
				
				# Refresh cargo
				set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 }
				remove_fleet_flag = kiyo_trade_end_expired
				
				# Queue action in case people mess with things
				set_name = "[kiyo_trade_start.GetName] - [kiyo_trade_end.GetName] Cargo (To [kiyo_trade_end.GetName])"
				queue_actions = { orbit_planet = event_target:kiyo_trade_end }
			}
			default = { log = "HOW DID THIS HAPPEN?! (kiyo_event_trade.2)" }
		}
	}

}

# Trade Cargo Expired (for cases where one planet has multiple trade routes on it)
fleet_event = {
	id = kiyo_event_trade.31
	hide_window = yes
	
	trigger = {
		owner = { any_owned_planet = { root = { has_fleet_flag = kiyo_trade_start@PREV } } }
		any_country = { is_country_type = default any_owned_planet = { root = { has_fleet_flag = kiyo_trade_end@PREV } } }
		has_fleet_flag = kiyo_trade_has_trade_route
		NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
		OR = {
			NOT = {
				has_fleet_flag = kiyo_trade_start_time
				has_fleet_flag = kiyo_trade_start_expired
			}
			NOT = {
				has_fleet_flag = kiyo_trade_end_time
				has_fleet_flag = kiyo_trade_end_expired
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_fleet_flag = kiyo_trade_start_time
					has_fleet_flag = kiyo_trade_start_expired
				}
			}
			owner = {
				random_owned_planet = { limit = { root = { has_fleet_flag = kiyo_trade_start@PREV } }
					kiyo_mod_trade_clear_trade_modifiers = yes
					
					set_variable = { which = kiyo_trade_minerals_end value = root }
					set_variable = { which = kiyo_trade_energy_end value = root }
					set_variable = { which = kiyo_trade_food_end value = root }
					set_variable = { which = kiyo_trade_unity_end value = root }
					set_variable = { which = kiyo_trade_consumer_goods_end value = root }
					set_variable = { which = kiyo_trade_alloys_end value = root }
					set_variable = { which = kiyo_trade_physics_research_end value = root }
					set_variable = { which = kiyo_trade_society_research_end value = root }
					set_variable = { which = kiyo_trade_engineering_research_end value = root }
					set_variable = { which = kiyo_trade_other_end value = root }
					
					subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_end }
					subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_end }
					subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_end }
					subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_end }
					subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_end }
					subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_end }
					subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_end }
					subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_end }
					subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_end }
					subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_end }
					
					root = {
						set_variable = { which = kiyo_trade_minerals_end value = 0 }
						set_variable = { which = kiyo_trade_energy_end value = 0 }
						set_variable = { which = kiyo_trade_food_end value = 0 }
						set_variable = { which = kiyo_trade_unity_end value = 0 }
						set_variable = { which = kiyo_trade_consumer_goods_end value = 0 }
						set_variable = { which = kiyo_trade_alloys_end value = 0 }
						set_variable = { which = kiyo_trade_physics_research_end value = 0 }
						set_variable = { which = kiyo_trade_society_research_end value = 0 }
						set_variable = { which = kiyo_trade_engineering_research_end value = 0 }
						set_variable = { which = kiyo_trade_other_end value = 0 }
					}
					
					kiyo_mod_trade_set_resource_modifiers = yes
				}
			}
		}
		if = {
			limit = {
				NOT = {
					has_fleet_flag = kiyo_trade_end_time
					has_fleet_flag = kiyo_trade_end_expired
				}
			}
			random_country = { limit = { is_country_type = default any_owned_planet = { root = { has_fleet_flag = kiyo_trade_end@PREV } } }
				random_owned_planet = { limit = { root = { has_fleet_flag = kiyo_trade_end@PREV } }
					kiyo_mod_trade_clear_trade_modifiers = yes
					
					set_variable = { which = kiyo_trade_minerals_start value = root }
					set_variable = { which = kiyo_trade_energy_start value = root }
					set_variable = { which = kiyo_trade_food_start value = root }
					set_variable = { which = kiyo_trade_unity_start value = root }
					set_variable = { which = kiyo_trade_consumer_goods_start value = root }
					set_variable = { which = kiyo_trade_alloys_start value = root }
					set_variable = { which = kiyo_trade_physics_research_start value = root }
					set_variable = { which = kiyo_trade_society_research_start value = root }
					set_variable = { which = kiyo_trade_engineering_research_start value = root }
					set_variable = { which = kiyo_trade_other_start value = root }
					
					subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_start }
					subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_start }
					subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_start }
					subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_start }
					subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_start }
					subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_start }
					subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_start }
					subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_start }
					subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_start }
					subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_start }
					
					root = {
						set_variable = { which = kiyo_trade_minerals_start value = 0 }
						set_variable = { which = kiyo_trade_energy_start value = 0 }
						set_variable = { which = kiyo_trade_food_start value = 0 }
						set_variable = { which = kiyo_trade_unity_start value = 0 }
						set_variable = { which = kiyo_trade_consumer_goods_start value = 0 }
						set_variable = { which = kiyo_trade_alloys_start value = 0 }
						set_variable = { which = kiyo_trade_physics_research_start value = 0 }
						set_variable = { which = kiyo_trade_society_research_start value = 0 }
						set_variable = { which = kiyo_trade_engineering_research_start value = 0 }
						set_variable = { which = kiyo_trade_other_start value = 0 }
					}
					
					kiyo_mod_trade_set_resource_modifiers = yes
				}
			}
		}
	}
	
}

# Gateway event to event below this one
planet_event = {
	id = kiyo_event_trade.32
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# SET ALL TRADE ROUTE FLEETS FROM THIS PLANET AS OPTIONS
		owner = {
			every_owned_fleet = {
				limit = {
					has_fleet_flag = kiyo_trade_start@PREVPREV
					has_fleet_flag = kiyo_trade_has_trade_route
					check_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value < prev }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_1 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_1 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_2 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_2 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_3 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_3 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_4 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_4 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_5 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_5 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_6 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_6 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_7 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_7 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_8 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_8 } }
					if = { limit = { exists = event_target:kiyo_trade_cargo_fleet_9 } NOT = { is_same_value = event_target:kiyo_trade_cargo_fleet_9 } }
				}
				if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_1 } } save_event_target_as = kiyo_trade_cargo_fleet_1 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_2 } } save_event_target_as = kiyo_trade_cargo_fleet_2 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_3 } } save_event_target_as = kiyo_trade_cargo_fleet_3 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_4 } } save_event_target_as = kiyo_trade_cargo_fleet_4 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_5 } } save_event_target_as = kiyo_trade_cargo_fleet_5 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_6 } } save_event_target_as = kiyo_trade_cargo_fleet_6 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_7 } } save_event_target_as = kiyo_trade_cargo_fleet_7 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_8 } } save_event_target_as = kiyo_trade_cargo_fleet_8 }
				else_if = { limit = { NOT = { exists = event_target:kiyo_trade_cargo_fleet_9 } } save_event_target_as = kiyo_trade_cargo_fleet_9 }
				else = { log = "[PrevPrev.GetName] has too many cargo fleets with non-maxed cargo ship numbers or there is a problem." }
			}
		}
		
		planet_event = { id = kiyo_event_trade.33 }
	}
	
}

# Choose which trade route to increase number of cargo ships by 1
planet_event = {
	id = kiyo_event_trade.33
	title = kiyo_event_trade.33.title
	desc = kiyo_event_trade.33.desc
	picture = GFX_evt_galactic_market
	location = root
	is_triggered_only = yes
	
	option = {
		name = kiyo_event_trade.33.a
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_1 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_1 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_1.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.b
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_2 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_2 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_1.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.c
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_3 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_3 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_3.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.d
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_4 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_4 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_4.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.e
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_5 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_5 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_5.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.f
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_6 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_6 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_6.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.g
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_7 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_7 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_7.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.h
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_8 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_8 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_8.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = kiyo_event_trade.33.i
		trigger = { exists = event_target:kiyo_trade_cargo_fleet_9 }
		ai_chance = { factor = 1 }
		
		hidden_effect = {
			event_target:kiyo_trade_cargo_fleet_9 = {
				create_fleet = {
					name = "[kiyo_trade_cargo_fleet_9.GetName]"
					effect = {
						set_owner = root.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_minerals value = prev }
						set_variable = { which = kiyo_trade_energy value = prev }
						set_variable = { which = kiyo_trade_food value = prev }
						set_variable = { which = kiyo_trade_unity value = prev }
						set_variable = { which = kiyo_trade_consumer_goods value = prev }
						set_variable = { which = kiyo_trade_alloys value = prev }
						set_variable = { which = kiyo_trade_physics_research value = prev }
						set_variable = { which = kiyo_trade_society_research value = prev }
						set_variable = { which = kiyo_trade_engineering_research value = prev }
						set_variable = { which = kiyo_trade_other value = prev }
						
						set_variable = { which = kiyo_trade_minerals_start value = prev }
						set_variable = { which = kiyo_trade_energy_start value = prev }
						set_variable = { which = kiyo_trade_food_start value = prev }
						set_variable = { which = kiyo_trade_unity_start value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
						set_variable = { which = kiyo_trade_alloys_start value = prev }
						set_variable = { which = kiyo_trade_physics_research_start value = prev }
						set_variable = { which = kiyo_trade_society_research_start value = prev }
						set_variable = { which = kiyo_trade_engineering_research_start value = prev }
						set_variable = { which = kiyo_trade_other_start value = prev }
						
						set_variable = { which = kiyo_trade_minerals_end value = prev }
						set_variable = { which = kiyo_trade_energy_end value = prev }
						set_variable = { which = kiyo_trade_food_end value = prev }
						set_variable = { which = kiyo_trade_unity_end value = prev }
						set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
						set_variable = { which = kiyo_trade_alloys_end value = prev }
						set_variable = { which = kiyo_trade_physics_research_end value = prev }
						set_variable = { which = kiyo_trade_society_research_end value = prev }
						set_variable = { which = kiyo_trade_engineering_research_end value = prev }
						set_variable = { which = kiyo_trade_other_end value = prev }
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						change_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						
						set_fleet_flag = kiyo_trade_has_trade_route
						owner = {
							random_owned_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start prevprev = { set_fleet_flag = kiyo_trade_start@PREV } }
							random_planet = { limit = { prevprevprev = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end prevprev = { set_fleet_flag = kiyo_trade_end@PREV } owner = { 
			add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } } }
						}
						prev = {
							switch = { trigger = has_fleet_flag
								kiyo_trade_starting = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_start_time days = 450 } } set_fleet_flag = kiyo_trade_starting queue_actions = { orbit_planet = event_target:kiyo_trade_end } } }
								kiyo_trade_ending = { prev = { if = { limit = { prev = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } } set_timed_fleet_flag = { flag = kiyo_trade_end_time days = 450 } } set_fleet_flag = kiyo_trade_ending queue_actions = { orbit_planet = event_target:kiyo_trade_start } } }
							}
						}
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
				remove_fleet_flag = kiyo_trade_starting
				remove_fleet_flag = kiyo_trade_ending
				remove_fleet_flag = kiyo_trade_has_trade_route
				set_fleet_flag = kiyo_event_trade_deleted_cargo
				
				clear_orders = yes
				
				delete_fleet = this
			}
			owner = { remove_country_flag = kiyo_trade_add_cargo_window }
		}
	}
	
	option = {
		name = NOTIME
		ai_chance = { factor = 0 }
		
		owner = {
			add_resource = {
				energy = 150
				alloys = 100
				consumer_goods = 400
			}
			remove_country_flag = kiyo_trade_add_cargo_window
		}
	}
	
}

# Trade Fleet no longer has a trade ship (for some weird reason) OR closed borders/war
# (Will get some resources as refund)
fleet_event = {
	id = kiyo_event_trade.4
	title = kiyo_event_trade.4.title
	desc = kiyo_event_trade.4.desc
	picture = GFX_evt_galactic_market
	location = root
	
	trigger = {
		exists = owner
		has_fleet_flag = kiyo_trade_has_trade_route
		OR = {
			NOT = { any_owned_ship = { is_ship_size = kiyo_trade } }
			any_planet = {
				root = {
					OR = {
						has_fleet_flag = kiyo_trade_start@PREV
						has_fleet_flag = kiyo_trade_end@PREV
					} 
				}
				NOT = { exists = owner }
			}
			any_planet = {
				exists = owner
				owner = {
					OR = {
						has_closed_borders = root.owner
						is_at_war_with = root.owner
					}
				}
				root = { has_fleet_flag = kiyo_trade_end@PREV }
			}
		}
	}
	
	immediate = {
		owner = {
			random_owned_planet = { limit = { root = { has_fleet_flag = kiyo_trade_start@PREV } }
				kiyo_mod_trade_clear_trade_modifiers = yes
				
				if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } }
					set_variable = { which = kiyo_trade_minerals_start value = prev }
					set_variable = { which = kiyo_trade_energy_start value = prev }
					set_variable = { which = kiyo_trade_food_start value = prev }
					set_variable = { which = kiyo_trade_unity_start value = prev }
					set_variable = { which = kiyo_trade_consumer_goods_start value = prev }
					set_variable = { which = kiyo_trade_alloys_start value = prev }
					set_variable = { which = kiyo_trade_physics_research_start value = prev }
					set_variable = { which = kiyo_trade_society_research_start value = prev }
					set_variable = { which = kiyo_trade_engineering_research_start value = prev }
					set_variable = { which = kiyo_trade_other_start value = prev }
					
					subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_start }
					subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_start }
					subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_start }
					subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_start }
					subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_start }
					subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_start }
					subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_start }
					subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_start }
					subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_start }
					subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_start }
				}
					
				kiyo_mod_trade_set_resource_modifiers = yes
				
				root = { remove_fleet_flag = kiyo_trade_start@PREV }
				kiyo_mod_trade_check_trade_route_exist = yes
				
				save_event_target_as = kiyo_trade_start
			}
		}
		random_planet = { limit = { root = { has_fleet_flag = kiyo_trade_end@PREV } }
			kiyo_mod_trade_clear_trade_modifiers = yes
			
			if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } }
				set_variable = { which = kiyo_trade_minerals_end value = prev }
				set_variable = { which = kiyo_trade_energy_end value = prev }
				set_variable = { which = kiyo_trade_food_end value = prev }
				set_variable = { which = kiyo_trade_unity_end value = prev }
				set_variable = { which = kiyo_trade_consumer_goods_end value = prev }
				set_variable = { which = kiyo_trade_alloys_end value = prev }
				set_variable = { which = kiyo_trade_physics_research_end value = prev }
				set_variable = { which = kiyo_trade_society_research_end value = prev }
				set_variable = { which = kiyo_trade_engineering_research_end value = prev }
				set_variable = { which = kiyo_trade_other_end value = prev }
				
				subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_end }
				subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_end }
				subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_end }
				subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_end }
				subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_end }
				subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_end }
				subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_end }
				subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_end }
				subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_end }
				subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_end }
			}
				
			kiyo_mod_trade_set_resource_modifiers = yes
			
			root = { remove_fleet_flag = kiyo_trade_end@PREV }
			kiyo_mod_trade_check_trade_route_exist = yes
			
			owner = { 
				remove_opinion_modifier = { modifier = opinion_kiyo_mod_trade_trade_routes who = root.owner }
				root.owner = {
					every_owned_ship = {
						limit = {
							prevprev = { any_owned_planet = { prevprev = { fleet = { has_fleet_flag = kiyo_trade_end@PREVPREVPREV } } } }
						}
						prevprev = { add_opinion_modifier = { who = root.owner modifier = opinion_kiyo_mod_trade_trade_routes } }
					}
				}
			}
		}
		
		set_variable = { which = kiyo_trade_minerals value = 0 }
		set_variable = { which = kiyo_trade_energy value = 0 }
		set_variable = { which = kiyo_trade_food value = 0 }
		set_variable = { which = kiyo_trade_unity value = 0 }
		set_variable = { which = kiyo_trade_consumer_goods value = 0 }
		set_variable = { which = kiyo_trade_alloys value = 0 }
		set_variable = { which = kiyo_trade_physics_research value = 0 }
		set_variable = { which = kiyo_trade_society_research value = 0 }
		set_variable = { which = kiyo_trade_engineering_research value = 0 }
		set_variable = { which = kiyo_trade_other value = 0 }
		set_variable = { which = kiyo_trade_minerals_start value = 0 }
		set_variable = { which = kiyo_trade_energy_start value = 0 }
		set_variable = { which = kiyo_trade_food_start value = 0 }
		set_variable = { which = kiyo_trade_unity_start value = 0 }
		set_variable = { which = kiyo_trade_consumer_goods_start value = 0 }
		set_variable = { which = kiyo_trade_alloys_start value = 0 }
		set_variable = { which = kiyo_trade_physics_research_start value = 0 }
		set_variable = { which = kiyo_trade_society_research_start value = 0 }
		set_variable = { which = kiyo_trade_engineering_research_start value = 0 }
		set_variable = { which = kiyo_trade_other_start value = 0 }
		set_variable = { which = kiyo_trade_minerals_end value = 0 }
		set_variable = { which = kiyo_trade_energy_end value = 0 }
		set_variable = { which = kiyo_trade_food_end value = 0 }
		set_variable = { which = kiyo_trade_unity_end value = 0 }
		set_variable = { which = kiyo_trade_consumer_goods_end value = 0 }
		set_variable = { which = kiyo_trade_alloys_end value = 0 }
		set_variable = { which = kiyo_trade_physics_research_end value = 0 }
		set_variable = { which = kiyo_trade_society_research_end value = 0 }
		set_variable = { which = kiyo_trade_engineering_research_end value = 0 }
		set_variable = { which = kiyo_trade_other_end value = 0 }
		
		remove_fleet_flag = kiyo_trade_starting
		remove_fleet_flag = kiyo_trade_ending
		remove_fleet_flag = kiyo_trade_has_trade_route
		set_fleet_flag = kiyo_event_trade_deleted_cargo
		
		clear_orders = yes
		
		create_fleet = {
			name = "Cargo from [kiyo_trade_start.GetName]"
			effect = {
				set_owner = root.owner
				set_location = {
					target = prev
					distance = 5
					angle = random
				}
				set_fleet_stance = passive
				
				owner = {
					every_owned_ship = {
						limit = {
							is_ship_size = kiyo_trade
							fleet = { is_same_value = prevprevprevprev }
						}
						prevprev = {
							create_ship = {
								name = "Cargo Ship"
								random_existing_design = kiyo_trade
								prefix = yes
								upgradable = yes
							}
						}
					}
				}
				
				set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
				owner = { event_target:kiyo_trade_start = { prevprev = { set_fleet_flag = kiyo_trade_start@PREV } } }
			}
			settings = {
				can_upgrade = no
				can_disband = yes
				can_change_composition = no
				can_change_leader = no
				spawn_debris = yes
			}
		}
		
		delete_fleet = this
		
		# Subtract 1 from number of current trade routes
		owner = { subtract_variable = { which = kiyo_trade_num_trade_routes value = 1 } }
	}

	option = { name = OK }

}

# Trade Fleet with trade route being attacked will queue orders to orbit the planets again
country_event = {
	id = kiyo_event_trade.5
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { any_owned_planet = { root.fromfrom = { has_fleet_flag = kiyo_trade_start@PREV } } } 
	
	immediate = {
		random_owned_planet = { limit = { root.fromfrom = { has_fleet_flag = kiyo_trade_start@PREV } } save_event_target_as = kiyo_trade_start }
		random_planet = { limit = { root.fromfrom = { has_fleet_flag = kiyo_trade_end@PREV } } save_event_target_as = kiyo_trade_end }
		
		fromfrom = {
			clear_orders = yes
	
			switch = { trigger = has_fleet_flag
				kiyo_trade_starting = { queue_actions = { orbit_planet = event_target:kiyo_trade_end } }
				kiyo_trade_ending = { queue_actions = { orbit_planet = event_target:kiyo_trade_start } }
				default = { log = "HOW DID THIS HAPPEN?! (kiyo_event_trade.5)" }
			}
		}
	}

}

# Trade Fleet with trade route fleet destroyed will lose trade route along with planets involved losing resources being traded
country_event = {
	id = kiyo_event_trade.51
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { any_owned_planet = { root.fromfrom = { has_fleet_flag = kiyo_trade_start@PREV } } } 
	
	immediate = {
		random_owned_planet = { limit = { root.fromfrom = { has_fleet_flag = kiyo_trade_start@PREV } }
			kiyo_mod_trade_clear_trade_modifiers = yes
			
			if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } }
				set_variable = { which = kiyo_trade_minerals_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_energy_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_food_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_unity_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_consumer_goods_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_alloys_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_physics_research_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_society_research_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_engineering_research_start value = prev.fromfrom }
				set_variable = { which = kiyo_trade_other_start value = prev.fromfrom }
				
				subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_start }
				subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_start }
				subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_start }
				subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_start }
				subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_start }
				subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_start }
				subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_start }
				subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_start }
				subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_start }
				subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_start }
			}
			
			kiyo_mod_trade_set_resource_modifiers = yes
			
			root.fromfrom = { remove_fleet_flag = kiyo_trade_start@PREV }
			kiyo_mod_trade_check_trade_route_exist = yes
		}
		random_planet = { limit = { root.fromfrom = { has_fleet_flag = kiyo_trade_end@PREV } }
			kiyo_mod_trade_clear_trade_modifiers = yes
			
			if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } }
				set_variable = { which = kiyo_trade_minerals_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_energy_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_food_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_unity_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_consumer_goods_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_alloys_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_physics_research_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_society_research_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_engineering_research_end value = prev.fromfrom }
				set_variable = { which = kiyo_trade_other_end value = prev.fromfrom }
				
				subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_end }
				subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_end }
				subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_end }
				subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_end }
				subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_end }
				subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_end }
				subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_end }
				subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_end }
				subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_end }
				subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_end }
			}
			
			kiyo_mod_trade_set_resource_modifiers = yes
			root.fromfrom = { remove_fleet_flag = kiyo_trade_end@PREV }
			kiyo_mod_trade_check_trade_route_exist = yes
		}
		
		fromfrom = {
			set_variable = { which = kiyo_trade_minerals value = 0 }
			set_variable = { which = kiyo_trade_energy value = 0 }
			set_variable = { which = kiyo_trade_food value = 0 }
			set_variable = { which = kiyo_trade_unity value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods value = 0 }
			set_variable = { which = kiyo_trade_alloys value = 0 }
			set_variable = { which = kiyo_trade_physics_research value = 0 }
			set_variable = { which = kiyo_trade_society_research value = 0 }
			set_variable = { which = kiyo_trade_engineering_research value = 0 }
			set_variable = { which = kiyo_trade_other value = 0 }
			set_variable = { which = kiyo_trade_minerals_start value = 0 }
			set_variable = { which = kiyo_trade_energy_start value = 0 }
			set_variable = { which = kiyo_trade_food_start value = 0 }
			set_variable = { which = kiyo_trade_unity_start value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods_start value = 0 }
			set_variable = { which = kiyo_trade_alloys_start value = 0 }
			set_variable = { which = kiyo_trade_physics_research_start value = 0 }
			set_variable = { which = kiyo_trade_society_research_start value = 0 }
			set_variable = { which = kiyo_trade_engineering_research_start value = 0 }
			set_variable = { which = kiyo_trade_other_start value = 0 }
			set_variable = { which = kiyo_trade_minerals_end value = 0 }
			set_variable = { which = kiyo_trade_energy_end value = 0 }
			set_variable = { which = kiyo_trade_food_end value = 0 }
			set_variable = { which = kiyo_trade_unity_end value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods_end value = 0 }
			set_variable = { which = kiyo_trade_alloys_end value = 0 }
			set_variable = { which = kiyo_trade_physics_research_end value = 0 }
			set_variable = { which = kiyo_trade_society_research_end value = 0 }
			set_variable = { which = kiyo_trade_engineering_research_end value = 0 }
			set_variable = { which = kiyo_trade_other_end value = 0 }
			
			remove_fleet_flag = kiyo_trade_starting
			remove_fleet_flag = kiyo_trade_ending
			remove_fleet_flag = kiyo_trade_has_trade_route
			
			clear_orders = yes
			
			destroy_fleet = this
		}
		
		# Subtract 1 from number of current trade routes
		subtract_variable = { which = kiyo_trade_num_trade_routes value = 1 }
	}

}


# Trade Fleet with trade route ship destroyed will subtract fleet's variable for max cargo ship per fleet
country_event = {
	id = kiyo_event_trade.52
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { any_owned_planet = { root.fromfrom = { fleet = { has_fleet_flag = kiyo_trade_start@PREVPREV } } } }
	
	immediate = {
		fromfrom = {
			fleet = { subtract_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 } }
			random_planet = {
				limit = { prev = { fleet = { has_fleet_flag = kiyo_trade_end@PREVPREV } } }
				owner = {
					remove_opinion_modifier = { modifier = opinion_kiyo_mod_trade_trade_routes who = root }
					root = {
						every_owned_ship = {
							limit = {
								prevprev = { any_owned_planet = { prevprev = { fleet = { has_fleet_flag = kiyo_trade_end@PREVPREVPREV } } } }
							}
							prevprev = { add_opinion_modifier = { who = root modifier = opinion_kiyo_mod_trade_trade_routes } }
						}
					}
				}
			}
		}
	}

}

# Trade Fleet with trade route being disbanded will lose trade route along with planets involved losing monthly resources being traded
country_event = {
	id = kiyo_event_trade.6
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { from = { has_fleet_flag = kiyo_trade_has_trade_route } }
	
	immediate = {
		random_owned_planet = { limit = { root.from = { has_fleet_flag = kiyo_trade_start@PREV } }
			kiyo_mod_trade_clear_trade_modifiers = yes
			
			if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_start_expired } } }
				set_variable = { which = kiyo_trade_minerals_start value = prev.from }
				set_variable = { which = kiyo_trade_energy_start value = prev.from }
				set_variable = { which = kiyo_trade_food_start value = prev.from }
				set_variable = { which = kiyo_trade_unity_start value = prev.from }
				set_variable = { which = kiyo_trade_consumer_goods_start value = prev.from }
				set_variable = { which = kiyo_trade_alloys_start value = prev.from }
				set_variable = { which = kiyo_trade_physics_research_start value = prev.from }
				set_variable = { which = kiyo_trade_society_research_start value = prev.from }
				set_variable = { which = kiyo_trade_engineering_research_start value = prev.from }
				set_variable = { which = kiyo_trade_other_start value = prev.from }
				
				subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_start }
				subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_start }
				subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_start }
				subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_start }
				subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_start }
				subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_start }
				subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_start }
				subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_start }
				subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_start }
				subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_start }
			}
			
			kiyo_mod_trade_set_resource_modifiers = yes
			save_event_target_as = kiyo_trade_start
			kiyo_mod_trade_check_trade_route_exist = yes
		}
		random_planet = { limit = { root.from = { has_fleet_flag = kiyo_trade_end@PREV } }
			kiyo_mod_trade_clear_trade_modifiers = yes
			
			if = { limit = { root = { NOT = { has_fleet_flag = kiyo_trade_end_expired } } }
				set_variable = { which = kiyo_trade_minerals_end value = prev.from }
				set_variable = { which = kiyo_trade_energy_end value = prev.from }
				set_variable = { which = kiyo_trade_food_end value = prev.from }
				set_variable = { which = kiyo_trade_unity_end value = prev.from }
				set_variable = { which = kiyo_trade_consumer_goods_end value = prev.from }
				set_variable = { which = kiyo_trade_alloys_end value = prev.from }
				set_variable = { which = kiyo_trade_physics_research_end value = prev.from }
				set_variable = { which = kiyo_trade_society_research_end value = prev.from }
				set_variable = { which = kiyo_trade_engineering_research_end value = prev.from }
				set_variable = { which = kiyo_trade_other_end value = prev.from }
				
				subtract_variable = { which = kiyo_trade_minerals value = kiyo_trade_minerals_end }
				subtract_variable = { which = kiyo_trade_energy value = kiyo_trade_energy_end }
				subtract_variable = { which = kiyo_trade_food value = kiyo_trade_food_end }
				subtract_variable = { which = kiyo_trade_unity value = kiyo_trade_unity_end }
				subtract_variable = { which = kiyo_trade_consumer_goods value = kiyo_trade_consumer_goods_end }
				subtract_variable = { which = kiyo_trade_alloys value = kiyo_trade_alloys_end }
				subtract_variable = { which = kiyo_trade_physics_research value = kiyo_trade_physics_research_end }
				subtract_variable = { which = kiyo_trade_society_research value = kiyo_trade_society_research_end }
				subtract_variable = { which = kiyo_trade_engineering_research value = kiyo_trade_engineering_research_end }
				subtract_variable = { which = kiyo_trade_other value = kiyo_trade_other_end }
			}
			
			kiyo_mod_trade_set_resource_modifiers = yes
			root.from = { remove_fleet_flag = kiyo_trade_end@PREV }
			kiyo_mod_trade_check_trade_route_exist = yes
		}
		
		from = {
			set_variable = { which = kiyo_trade_minerals value = 0 }
			set_variable = { which = kiyo_trade_energy value = 0 }
			set_variable = { which = kiyo_trade_food value = 0 }
			set_variable = { which = kiyo_trade_unity value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods value = 0 }
			set_variable = { which = kiyo_trade_alloys value = 0 }
			set_variable = { which = kiyo_trade_physics_research value = 0 }
			set_variable = { which = kiyo_trade_society_research value = 0 }
			set_variable = { which = kiyo_trade_engineering_research value = 0 }
			set_variable = { which = kiyo_trade_other value = 0 }
			set_variable = { which = kiyo_trade_minerals_start value = 0 }
			set_variable = { which = kiyo_trade_energy_start value = 0 }
			set_variable = { which = kiyo_trade_food_start value = 0 }
			set_variable = { which = kiyo_trade_unity_start value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods_start value = 0 }
			set_variable = { which = kiyo_trade_alloys_start value = 0 }
			set_variable = { which = kiyo_trade_physics_research_start value = 0 }
			set_variable = { which = kiyo_trade_society_research_start value = 0 }
			set_variable = { which = kiyo_trade_engineering_research_start value = 0 }
			set_variable = { which = kiyo_trade_other_start value = 0 }
			set_variable = { which = kiyo_trade_minerals_end value = 0 }
			set_variable = { which = kiyo_trade_energy_end value = 0 }
			set_variable = { which = kiyo_trade_food_end value = 0 }
			set_variable = { which = kiyo_trade_unity_end value = 0 }
			set_variable = { which = kiyo_trade_consumer_goods_end value = 0 }
			set_variable = { which = kiyo_trade_alloys_end value = 0 }
			set_variable = { which = kiyo_trade_physics_research_end value = 0 }
			set_variable = { which = kiyo_trade_society_research_end value = 0 }
			set_variable = { which = kiyo_trade_engineering_research_end value = 0 }
			set_variable = { which = kiyo_trade_other_end value = 0 }
			
			remove_fleet_flag = kiyo_trade_starting
			remove_fleet_flag = kiyo_trade_ending
			remove_fleet_flag = kiyo_trade_has_trade_route
			set_fleet_flag = kiyo_event_trade_deleted_cargo
			
			clear_orders = yes
			
			if = { limit = { has_fleet_flag = kiyo_trade_has_trade_route }
				create_fleet = {
					name = "Cargo from [kiyo_trade_start.GetName]"
					effect = {
						set_owner = root
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						
						owner = {
							every_owned_ship = {
								limit = {
									is_ship_size = kiyo_trade
									fleet = { is_same_value = prevprevprevprev }
								}
								prevprev = {
									create_ship = {
										name = "Cargo Ship"
										random_existing_design = kiyo_trade
										prefix = yes
										upgradable = yes
									}
								}
							}
						}
						
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = prev }
						owner = { event_target:kiyo_trade_start = { prevprev = { set_fleet_flag = kiyo_trade_start@PREV } } }
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
			}
			else = {
				owner = {
					every_owned_ship = {
						limit = {
							is_ship_size = kiyo_trade
							fleet = { is_same_value = prevprev }
						}
						prev = {
							add_resource = {
								energy = 150
								alloys = 150
								consumer_goods = 400
							}
						}
					}
				}
			}
		}
		
		# Subtract 1 from number of current trade routes
		subtract_variable = { which = kiyo_trade_num_trade_routes value = 1 }
	}

}

# Trade Fleet with trade route (set-up phase) being disbanded will lose trade route along with planets involved losing monthly resources being traded
country_event = {
	id = kiyo_event_trade.7
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { any_owned_planet = { root.from = { has_fleet_flag = kiyo_trade_start@PREV } } from = { NOT = { has_fleet_flag = kiyo_trade_has_trade_route } } }
	
	immediate = {
		random_owned_planet = { limit = { root.from = { has_fleet_flag = kiyo_trade_start@PREV } }
			root.from = { remove_fleet_flag = kiyo_trade_start@PREV  }
			kiyo_mod_trade_check_trade_route_exist = yes
		}
		
		every_owned_ship = {
			limit = {
				is_ship_size = kiyo_trade
				fleet = { is_same_value = prev.from }
			}
			prev = {
				add_resource = {
					energy = 150
					alloys = 100
					consumer_goods = 400
				}
			}
			random_planet = {
				limit = { prev = { fleet = { has_fleet_flag = kiyo_trade_end@PREVPREV } } }
				owner = {
					remove_opinion_modifier = { modifier = opinion_kiyo_mod_trade_trade_routes who = root }
					root = {
						every_owned_ship = {
							limit = {
								prevprev = { any_owned_planet = { prevprev = { fleet = { has_fleet_flag = kiyo_trade_end@PREVPREVPREV } } } }
							}
							prevprev = { add_opinion_modifier = { who = root modifier = opinion_kiyo_mod_trade_trade_routes } }
						}
					}
				}
			}
		}
		from = { set_fleet_flag = kiyo_event_trade_deleted_cargo }
		
		# Subtract 1 from number of current trade routes
		subtract_variable = { which = kiyo_trade_num_trade_routes value = 1 }
	}

}
##########################################################################
# Events for Pirate Waves
#
# Written by ScepraX
##########################################################################

namespace = pirate_waves

# Variables
@pirate_waves_station_life_days = 7200 # Stations lives for 20 years before spawning fleet and it gets destroyed

#################################################
#	Pirates										#
#################################################

# New Pirates (HIDDEN)
# Called monthly
event = {
	id = pirate_waves.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
	}
		
	immediate = {
		random_list = {
			1 = {				
				# Find a suitable player controlled country to base the spawn chance on
				random_country = {
					limit = {
						is_pirate_waves_player = yes
					}	
					country_event = { 
						id = pirate_waves.4
						days = 360
						random = 7200
					}	
					# log = "Spawning a Pirate Freehold"
				}
			}	
			
			999 = {}			
		}
	}
}

# Create a new Pirate Fleet at this station (HIDDEN)
# Called by pirate_waves.3 and pirate_waves.6
fleet_event = {
	id = pirate_waves.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
		exists = this
	}
	
	immediate = {
		# Save this military station as our place of origin. Used in triggers.
		save_event_target_as = spawn_location
		
		# log = "Spawn location: [This.GetName]..."
		
		# Use the scope from the owner of the station to create the new fleet
		owner = {
			save_event_target_as = current_pirate_country 
			
			# log = "Pirate country: [This.GetName]..."
		}
		
		event_target:current_pirate_country = {
			# Checks the ship limit of this country
			if = {
				limit = {
					always = yes
				}
			
				# Create a fleet based on fleet power
				create_fleet = {
					name = "NAME_Pirate_Fleet"
					effect = {
						save_event_target_as = pirate_waves_fleet
	
						# Owner is set before the ships are created so that random naming works
						set_owner = event_target:current_pirate_country
						
						# Create ships
						create_pirate_waves_fleet = yes
						
						# Fleet settings
						set_location = ROOT
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						set_name = "Lawless Scavengers"
															
						# Set the fleet orders
						queue_actions = {
							repeat = {
								# Scout a system to set up a base in
								find_random_system = {
									trigger = {
										id = pirate_waves.2.trigger.1
										distance = {
											source = PREV
											use_bypasses = no
											max_jumps <= 5
											min_jumps >= 1
										}
										AND ={
											NOR = {
												has_star_flag = sanctuary_system
												has_star_flag = hostile_system
											}
											any_planet = {
												is_pirate_waves_base_planet = yes
											}
											any_ship_in_system = {
												is_ship_class = shipclass_starbase
												is_disabled = yes
											}
										}
									}
									found_system = {
										move_to = THIS
									}
								}
								# Make the Station
								find_random_planet = {
									trigger = {
										id = pirate_waves.2.trigger.2
										exists = yes
									}
									
									found_planet = {
										orbit_planet = THIS
										
										wait = {
											duration = 360
										}
										
										orbit_planet = THIS
										
										effect = {
											id = pirate_waves.2.effect.1
											
											# Check if there's not already a station here because of multiple fleets
											if = {
												limit = {
													has_military_station = no
												}
												
												# Create a new pirate station
												planet_event = { id = pirate_waves.3 }
												
												event_target:pirate_waves_fleet = {
													destroy_fleet = this
												}
											}
										}
									}
								}
								# If we can't find any disabled starbases, then just set up somewhere nearby
								find_random_system = {
									trigger = {
										id = pirate_waves.2.trigger.1
										distance = {
											source = PREV
											use_bypasses = no
											max_jumps <= 10
											min_jumps >= 3
										}
										AND ={
											NOR = {
												exists = space_owner
												has_star_flag = sanctuary_system
												has_star_flag = hostile_system
											}
											any_planet = {
												is_pirate_waves_base_planet = yes
											}
										}
									}
									found_system = {
										move_to = THIS
									}
								}
								# Make the Station
								find_random_planet = {
									trigger = {
										id = pirate_waves.2.trigger.2
										exists = yes
									}
									
									found_planet = {
										orbit_planet = THIS
										
										# If were setting up somewhere randomly, then lets make this spawn a little slower
										wait = {
											duration = 360
										}
										
										orbit_planet = THIS
										
										effect = {
											id = pirate_waves.2.effect.1
											
											# Check if there's not already a station here because of multiple fleets
											if = {
												limit = {
													has_military_station = no
												}
												
												# Create a new pirate station
												planet_event = { id = pirate_waves.3 }
												event_target:pirate_waves_fleet = {
													destroy_fleet = this
												}
											}
											
										}
									}
								}								
								wait = {
									duration = 10
									random = 20
								}
								# Fallback for FTL Inhibitor bullshit
								find_closest_system = {
									trigger = {
										id = pirate_waves.2.a
										NOR = {
											space_owner = exists
											has_star_flag = sanctuary_system
											has_star_flag = hostile_system
										}										
										any_system_planet = {
											is_pirate_waves_base_planet = yes
										}
									}
									found_system = {
										move_to = THIS
									}
								}
								# Make the Station
								find_random_planet = {
									trigger = {
										id = pirate_waves.2.trigger.4
										is_pirate_waves_base_planet = yes
									}
									
									found_planet = {
										orbit_planet = THIS
										
										wait = {
											duration = 360
										}				
										
										orbit_planet = THIS
										
										effect = {
											id = pirate_waves.2.effect.2
											
											# Check if there's not already a station here because of multiple fleets
											if = {
												limit = {
													has_military_station = no
												}
												
												# Create a new pirate station
												planet_event = { id = pirate_waves.3 }
												event_target:pirate_waves_fleet = {
													destroy_fleet = this
												}	
											}

										}
									}
								}
								wait = {
									duration = 10
									random = 20
								}
							}
						}
					}
				}
				
				# We want the species of the closest country with a border
				ROOT = {
					closest_system = {
						limit = {
							exists = space_owner
						}
					
						space_owner = {			
							owner_species = { 
								save_event_target_as = closest_country_species 
							}
						}
					}
				}
			
				# Create an admiral for the pirate fleet
				create_leader = {
					type = admiral
					species = event_target:closest_country_species
					name = random
					skill = 1
					traits = {
						trait = random_trait
					}
				}
				last_created_leader = {
					set_leader_flag = pirate_waves_leader
				}

				# Do things that need an existing fleet
				event_target:pirate_waves_fleet = {
					# Assign leader
					assign_leader = last_created_leader
			
					
					# log = "Pirate Fleet '[This.GetName]' created..."
				}
			}	
		}
		
		fleet_event = { 
			id = pirate_waves.2
			days = 480
			random = 3600
		}	
	}
}

# Spawns the raiding fleet that goes and fucks up peoples days
fleet_event = {
	id = pirate_waves.69
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
		exists = this
	}
	
	immediate = {
		# Save this military station as our place of origin. Used in triggers.
		save_event_target_as = spawn_location
		
		# log = "Spawn location: [This.GetName]..."
		
		# Use the scope from the owner of the station to create the new fleet
		owner = {
			save_event_target_as = current_pirate_country 
		}
		create_fleet = {
			name = "Pirate Raiders"
			effect = {
				save_event_target_as = pirate_waves_fleet
				# Owner is set before the ships are created so that random naming works
				set_owner = event_target:current_pirate_country

				# Create ships
				create_pirate_waves_fleet = yes
		
				# Fleet settings
				set_location = ROOT
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 150
				
				queue_actions = {
					repeat = {
						find_random_system = {
							trigger = {
								id = pirate_waves.2.trigger.5
								distance = {
									source = PREV
									use_bypasses = no
									max_jumps <= 6
									min_jumps >= 1
								}
								AND = {
									space_owner = {
										is_country_type = default
									}	
									NOR = {
										has_star_flag = sanctuary_system
										has_star_flag = hostile_system
									}
									any_system_planet = {
										is_pirate_waves_raiding_planet = yes
									}
								}
							}
							found_system = {
								move_to = this
								find_closest_planet = {
									trigger = {
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}		
									}
									found_planet = {
										move_to = this
									}
								}
							}
						}
						# Add this as a fallback in case out pirate friends cant find anyone because of range and/or FTL inhibitors
						find_closest_system = {
							trigger = {
								space_owner = {
									is_country_type = default
								}
								any_ship_in_system = {
									is_ship_class = shipclass_starbase
									is_disabled = no
								}
							}
							found_system = {
								move_to = this
							}
						}
						find_random_system = {
							trigger = {
								id = pirate_waves.2.trigger.5
								distance = {
									source = PREV
									use_bypasses = no
									max_jumps <= 12
									min_jumps >= 1
								}
								AND = {
									space_owner = {
										is_country_type = default
									}	
									NOR = {
										has_star_flag = sanctuary_system
										has_star_flag = hostile_system
									}
									any_system_planet = {
										is_pirate_waves_raiding_planet = yes
									}
								}
							}
							found_system = {
								move_to = this
								find_closest_planet = {
									trigger = {
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}		
									}
									found_planet = {
										move_to = this
									}
								}
							}
						}
						# Loop this so we can deal with multi-inhibitor chokepoints.
						repeat = {
							find_closest_system = {
								trigger = {
									AND = {
										distance = {
											source = PREV
											use_bypasses = no
											min_jumps >= 1
										}
										any_ship_in_system = {
											is_ship_class = shipclass_starbase
											is_disabled = no
										}
									}
								}
								found_system = {
									move_to = this
								}
							}
							find_random_system = {
								trigger = {
									distance = {
										use_bypasses = no
										source = PREV
										min_jumps >= 1
									}
									AND = {
										space_owner = {
											is_country_type = default
										}	
										NOR = {
											has_star_flag = sanctuary_system
											has_star_flag = hostile_system
										}
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}
									}
								}
								found_system = {
									move_to = this
									find_closest_planet = {
										trigger = {
											any_system_planet = {
												is_pirate_waves_raiding_planet = yes
											}		
										}
										found_planet = {
											move_to = this
										}
									}
								}
							}
							find_closest_system = {
								trigger = {
									any_ship_in_system = {
										is_ship_size = pirate_station
									}
								}
								found_system = {
									move_to = this
									break = yes
								}
							}							
						}						
						wait = {
							duration = 30
						}
						move_to = event_target:spawn_location
						wait = {
							duration = 30
						}
					}
				}
			}
		}
		# We want the species of the closest country with a border
		ROOT = {
			closest_system = {
				limit = {
					exists = space_owner
				}			
				space_owner = {			
					owner_species = { 
						save_event_target_as = closest_country_species 
					}
				}
			}
		}
		# Create an admiral for the pirate fleet
		create_leader = {
			type = admiral
				species = event_target:closest_country_species
				name = random
				skill = 1
				traits = {
				trait = random_trait
			}
		}
		last_created_leader = {
			set_leader_flag = pirate_waves_leader
		}
		# Do things that need an existing fleet
		event_target:pirate_waves_fleet = {
			# Assign leader
			assign_leader = last_created_leader
			# log = "Pirate Fleet '[This.GetName]' created..."
		}
			
		fleet_event = {
			id = pirate_waves.69
			days = 480
			random = 3600
		}
	}
}

fleet_event = {
	id = pirate_waves.71
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
		exists = this
	}
	
	immediate = {
		# Save this military station as our place of origin. Used in triggers.
		save_event_target_as = spawn_location
		
		# log = "Spawn location: [This.GetName]..."
		
		# Use the scope from the owner of the station to create the new fleet
		owner = {
			save_event_target_as = current_pirate_country 
		}
		create_fleet = {
			name = "Pirate Warband"
			effect = {
				save_event_target_as = pirate_waves_fleet
				# Owner is set before the ships are created so that random naming works
				set_owner = event_target:current_pirate_country
				create_ship = {
					name = random
					design = "NAME_Black_Earl"
					prefix = no
					graphical_culture = "pirate_01"
				}						
				create_ship = {
					name = random
					design = "NAME_Black_Earl"
					prefix = no
					graphical_culture = "pirate_01"
				}							
				create_ship = {
					name = random
					design = "NAME_Black_Earl"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}							
				create_ship = {
					name = random
					design = "NAME_Skull"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Skull"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Skull"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Skull"
					prefix = no
					graphical_culture = "pirate_01"
				}
				create_ship = {
					name = random
					design = "NAME_Skull"
					prefix = no
					graphical_culture = "pirate_01"
				}							

				create_pirate_waves_fleet = yes
				create_pirate_waves_fleet = yes

				# Fleet settings
				set_location = ROOT
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 150
				set_name = "Pirate Warband"
				
				queue_actions = {
					repeat = {
						find_random_system = {
							trigger = {
								id = pirate_waves.2.trigger.5
								distance = {
									source = PREV
									use_bypasses = no
									max_jumps <= 6
									min_jumps >= 1
								}
								AND = {
									space_owner = {
										is_country_type = default
									}	
									NOR = {
										has_star_flag = sanctuary_system
										has_star_flag = hostile_system
									}
									any_system_planet = {
										is_pirate_waves_raiding_planet = yes
									}
								}
							}
							found_system = {
								move_to = this
								find_closest_planet = {
									trigger = {
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}		
									}
									found_planet = {
										move_to = this
									}
								}
							}
						}
						# Add this as a fallback in case out pirate friends cant find anyone because of range and/or FTL inhibitors
						find_closest_system = {
							trigger = {
								space_owner = {
									is_country_type = default
								}
								any_ship_in_system = {
										is_ship_class = shipclass_starbase
										is_disabled = no
								}
							}
							found_system = {
								move_to = this
							}
						}
						find_random_system = {
							trigger = {
								id = pirate_waves.2.trigger.5
								distance = {
									source = PREV
									max_jumps <= 12
									min_jumps >= 1
								}
								AND = {
									space_owner = {
										is_country_type = default
									}	
									NOR = {
										has_star_flag = sanctuary_system
										has_star_flag = hostile_system
									}
									any_system_planet = {
										is_pirate_waves_raiding_planet = yes
									}
								}
							}
							found_system = {
								move_to = this
								find_closest_planet = {
									trigger = {
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}		
									}
									found_planet = {
										move_to = this
									}
								}
							}
						}
						# Loop this so we can deal with multi-inhibitor chokepoints.
						repeat = {
							find_closest_system = {
								trigger = {
									AND = {
										distance = {
											source = PREV
											use_bypasses = no
											min_jumps >= 1
										}
										any_ship_in_system = {
											is_ship_class = shipclass_starbase
											is_disabled = no
										}
									}
								}
								found_system = {
									move_to = this
								}
							}
							find_random_system = {
								trigger = {
									distance = {
										source = PREV
										use_bypasses = no
										min_jumps >= 1
									}
									AND = {
										space_owner = {
											is_country_type = default
										}	
										NOR = {
											has_star_flag = sanctuary_system
											has_star_flag = hostile_system
										}
										any_system_planet = {
											is_pirate_waves_raiding_planet = yes
										}
									}
								}
								found_system = {
									move_to = this
									find_closest_planet = {
										trigger = {
											any_system_planet = {
												is_pirate_waves_raiding_planet = yes
											}		
										}
										found_planet = {
											move_to = this
										}
									}
								}
							}
							find_closest_system = {
								trigger = {
									any_ship_in_system = {
										is_ship_size = pirate_station
									}
								}
								found_system = {
									move_to = this
									break = yes
								}
							}							
						}						
						wait = {
							duration = 30
						}
						move_to = event_target:spawn_location
						wait = {
							duration = 30
						}
					}
				}
			}
		}
						
		# Get the closest neighbour for a pirate admiral
		ROOT = {
			closest_system = {
				limit = {
					exists = space_owner
					space_owner = {
						is_country_type = default
					}
				}
				space_owner = {			
					owner_species = { 
						save_event_target_as = closest_country_species 
					}
				}
			}
		}
			
		# Create an admiral for the pirate fleet
		create_leader = {
			type = admiral
			species = event_target:closest_country_species
			name = random
			skill = 5
			traits = {
				trait = random_trait
				trait = random_trait
				trait = random_trait
			}
		}
		last_created_leader = {
			set_leader_flag = pirate_waves_leader
		}
		# Do things that need an existing fleet
		event_target:pirate_waves_fleet = {
			# Assign leader
			assign_leader = last_created_leader
	
			
			# log = "Pirate Fleet '[This.GetName]' created..."
		}		
		fleet_event = {
			id = pirate_waves.71
			days = 3600
			random = 7200
		}
	}
}


# Create a new Pirate Station at this planet (HIDDEN)
# Called by pirate_waves.2 and pirate_waves.4
planet_event = {
	id = pirate_waves.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
		exists = this
	}
	
	immediate = {
		# Used in triggers as well.
		save_event_target_as = spawn_location
		
		# log = "Spawn location: [This.GetName]..."
		
		# Set the owner of this station based on the owner of the pirate fleet nearby or random if no fleet was found.
		solar_system = {
			if = {
				limit = {
					any_ship_in_system = {
						fleet = {
							exists = owner
							owner = {
								is_same_value = event_target:pirate_waves_2_country
							}
						}
					}
				}
				
				event_target:pirate_waves_2_country = {
					save_event_target_as = current_pirate_country
					
					# log = "Pirate country: [This.GetName]..."
				}
			}
			
			else_if = {
				limit = {
					any_ship_in_system = {
						fleet = {
							exists = owner
							owner = {
								is_same_value = event_target:pirate_waves_country
							}
						}
					}
				}
				
				event_target:pirate_waves_country = {
					save_event_target_as = current_pirate_country
					
					# log = "Pirate country: [This.GetName]..."
				}
			}
				
			else = {
				random_list = {
					50 = {
						modifier = {
							factor = 10.0
							event_target:pirate_waves_country = {
								num_fleets < 10
							}
						}
					
						event_target:pirate_waves_country = {
							save_event_target_as = current_pirate_country
							
							# log = "Pirate country: [This.GetName]..."
						}
					}
					50 = {
						modifier = {
							factor = 10.0
							event_target:pirate_waves_2_country = {
								num_fleets < 10
							}
						}
					
						event_target:pirate_waves_2_country = {
							save_event_target_as = current_pirate_country
							
							# log = "Pirate country: [This.GetName]..."
						}
					}
				}
			}
		}
		
		event_target:current_pirate_country = {
			# Randomize the flag
			randomize_flag_symbol = "pirate"
		
			# Create a pirate station
			create_fleet = {
				name = "NAME_Pirate_Nest"
				effect = {
					set_owner = event_target:current_pirate_country
					
					# Create the station
					create_pirate_waves_station = yes
					
					set_location = ROOT
				}
			}
			
			# Set a timed flag to disallow building new fleets
			last_created_fleet = {
				# Randomize the name
				set_name = random
			
				# Determines that this mod manages this station
				set_fleet_flag = pirate_waves_station_flag
			
				# How long this station will life
				set_timed_fleet_flag = {
					flag = pirate_waves_station_life_flag
					days = @pirate_waves_station_life_days
				}
			
				# Determine if to spawn a fleet
				if = {
					# Check whether there's a friendly fleet nearby that's not a station
					limit = {
						always = yes
					}
					
					# Wait a month, then spawn some defenders
					wait = {
						duration = 30
					}
					# Spawn a defense fleet
					create_fleet = {
						name = "Outlaw Defenders"
						effect = {
							save_event_target_as = pirate_waves_fleet
							# Owner is set before the ships are created so that random naming works
							set_owner = event_target:current_pirate_country

							# Create ships
							create_pirate_waves_fleet = yes
		
							# Fleet settings
							set_location = ROOT
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 1500
						}
					}
	
					fleet_event = {
						id = pirate_waves.2
						days = 360
						random = 1800
					}
					fleet_event = {
						id = pirate_waves.69
						days = 30
						random = 90
					}
				}
				# log = "Pirate Station '[This.GetName]' created..."
			}
		}
		
		#solar_system = {		
		#	# Notify all countries that have enough intel on this location
		#	every_country = {
		#		limit = {
		#			is_ai = no
		#			intel_level = { 
		#				level > medium
		#				system = prev 
		#			}
		#		}
		#		
		#		country_event = { 
		#			id = pirate_waves.50
		#			days = 1
		#		}
		#	}
		#}
	}
}

# Create a new Pirate Freehold at this planet (HIDDEN)
planet_event = {
	id = pirate_waves.15
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
		exists = this
	}
	
	immediate = {
		# Used in triggers as well.
		save_event_target_as = spawn_location
		
		# log = "Spawn location: [This.GetName]..."
		
		# Set the owner of this station based on the owner of the pirate fleet nearby or random if no fleet was found.
		solar_system = {
			if = {
				limit = {
					any_ship_in_system = {
						fleet = {
							exists = owner
							owner = {
								is_same_value = event_target:pirate_waves_2_country
							}
						}
					}
				}
				
				event_target:pirate_waves_2_country = {
					save_event_target_as = current_pirate_country
					
					# log = "Pirate country: [This.GetName]..."
				}
			}
			
			else_if = {
				limit = {
					any_ship_in_system = {
						fleet = {
							exists = owner
							owner = {
								is_same_value = event_target:pirate_waves_country
							}
						}
					}
				}
				
				event_target:pirate_waves_country = {
					save_event_target_as = current_pirate_country
					
					# log = "Pirate country: [This.GetName]..."
				}
			}
				
			else = {
				random_list = {
					50 = {
						modifier = {
							factor = 10.0
							event_target:pirate_waves_country = {
								num_fleets < 10
							}
						}
					
						event_target:pirate_waves_country = {
							save_event_target_as = current_pirate_country
							
							# log = "Pirate country: [This.GetName]..."
						}
					}
					50 = {
						modifier = {
							factor = 10.0
							event_target:pirate_waves_2_country = {
								num_fleets < 10
							}
						}
					
						event_target:pirate_waves_2_country = {
							save_event_target_as = current_pirate_country
							
							# log = "Pirate country: [This.GetName]..."
						}
					}
				}
			}
		}
		
		event_target:current_pirate_country = {
			# Randomize the flag
			randomize_flag_symbol = "pirate"
		
			# Create a pirate station
			create_fleet = {
				name = "NAME_Pirate_Freehold"
				effect = {
					set_owner = event_target:current_pirate_country
					
					# Create the station
					create_pirate_waves_freehold = yes
					
					set_location = ROOT
				}
			}
			
			# Set a timed flag to disallow building new fleets
			last_created_fleet = {
				# Randomize the name
				set_name = random
			
				# Determines that this mod manages this station
				#set_fleet_flag = pirate_waves_station_flag
			
				# How long this station will life
				#set_timed_fleet_flag = {
				#	flag = pirate_waves_station_life_flag
				#	days = @pirate_waves_station_life_days
				#}
			
				# Determine if to spawn a fleet
				if = {
					# Check whether there's a friendly fleet nearby that's not a station
					limit = {
						always = yes
					}
					
					# Wait a month, then spawn some defenders
					# Spawn a defense fleet
					create_fleet = {
						name = "Freehold Guard"
						effect = {
							save_event_target_as = pirate_waves_fleet
							# Owner is set before the ships are created so that random naming works
							set_owner = event_target:current_pirate_country

							# Create ships, adding a few galleons first, then call the function twice
							create_ship = {
								name = random
								design = "NAME_Pirate_Galleon"
								prefix = no
								graphical_culture = "pirate_01"
							}						
							create_ship = {
								name = random
								design = "NAME_Black_Earl"
								prefix = no
								graphical_culture = "pirate_01"
							}							
							create_ship = {
								name = random
								design = "NAME_Black_Earl"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Lancer"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Lancer"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Lancer"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Lancer"
								prefix = no
								graphical_culture = "pirate_01"
							}							
							create_ship = {
								name = random
								design = "NAME_Skull"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Skull"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Skull"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Skull"
								prefix = no
								graphical_culture = "pirate_01"
							}
							create_ship = {
								name = random
								design = "NAME_Skull"
								prefix = no
								graphical_culture = "pirate_01"
							}							
							
							create_pirate_waves_fleet = yes
							create_pirate_waves_fleet = yes
		
							# Fleet settings
							set_location = ROOT
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
							set_aggro_range = 1500
						}
					}
					fleet_event = {
						id = pirate_waves.2
						days = 30
						random = 900
					}	
					fleet_event = {
						id = pirate_waves.2
						days = 60
						random = 1800
					}
					fleet_event = {
						id = pirate_waves.2
						days = 90
						random = 3600
					}			
					fleet_event = {
						id = pirate_waves.69
						days = 30
						random = 1800
					}					
					if = {
						limit = { years_passed >= 40 }
						fleet_event = {
							id = pirate_waves.69
							days = 60
							random = 1800
						}
					}
					if = {
						limit = { years_passed >= 60 }
						fleet_event = {
							id = pirate_waves.69
							days = 90
							random = 1800
						}
					}
					if = {
						limit = { years_passed >= 80 }
						fleet_event = {
							id = pirate_waves.69
							days = 120
							random = 1800
						}
					}				
					if = {
						limit = { years_passed >= 100 }
						fleet_event = {
							id = pirate_waves.69
							days = 150
							random = 1800
						}
					}					
					if = {
						limit = { years_passed >= 50 }
						fleet_event = {
							id = pirate_waves.71
							days = 1800
							random = 3600
						}
					}
					if = {
						limit = { years_passed >= 100 }
						fleet_event = {
							id = pirate_waves.71
							days = 3600
							random = 3600
						}
					}					
				}
				# log = "Pirate Station '[This.GetName]' created..."
			}
		}
		
		solar_system = {		
			# Notify all countries that have enough intel on this location
			every_country = {
				limit = {
					is_ai = no
					intel_level = { 
						level > medium
						system = prev 
					}
				}
				
				country_event = { 
					id = pirate_waves.50
					days = 1
				}
			}
		}
	}
}

# Create a new Pirate Station randomly in the universe belong to this country (HIDDEN)
# Called by pirate_waves.1
country_event = {
	id = pirate_waves.4
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
	}
	
	immediate = {
		# Choose a random asteroid in the galaxy to spawn at
		if = {	
			limit = {
				any_system = {
					NOR = {
						exists = space_owner
						exists = starbase
						has_star_flag = sanctuary_system
						has_star_flag = hostile_system
						is_bottleneck_system = yes
					}
					any_planet = {
						is_pirate_waves_base_planet = yes
					}
					NOT = {
						any_ship_in_system = {
							exists = owner
							owner = {
								is_pirate = yes
							}
						}
					}
				}
			}
			
			# A random asteroid in unowned space
			random_planet = {
				limit = { 
					is_pirate_waves_base_planet = yes
					solar_system = {
						NOR = {
							exists = space_owner
							exists = starbase
							has_star_flag = sanctuary_system
							has_star_flag = hostile_system
							is_bottleneck_system = yes
						}
						NOT = {
							any_ship_in_system = {
								exists = owner
								owner = {
									is_pirate = yes
								}
							}
						}
					}
				}
				
				# Spawn a Pirate Station
				planet_event = {
					id = pirate_waves.15
				}
			}
		}
			
		# A random asteroid in the galaxy
		else = {
			random_planet = {
				limit = { 
					is_pirate_waves_base_planet = yes
					solar_system = {
						NOR = {
							is_bottleneck_system = yes
							has_star_flag = sanctuary_system
							has_star_flag = hostile_system
						}
						NOT = {
							any_ship_in_system = {
								exists = owner
								owner = {
									is_pirate = yes
								}
							}
						}
					}
				}
				
				# Spawn a Pirate Station
				planet_event = {
					id = pirate_waves.15
				}
			}
		}
	}
}

# Create Pirate Countries (HIDDEN)
# Called at the begin of the game and monthy
event = {
	id = pirate_waves.5
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			exists = event_target:pirate_waves_country
			exists = event_target:pirate_waves_2_country
		}
	}
	
	immediate = {
		create_pirate_waves_countries = yes
	}
}

# Manage Pirate Stations of this country (HIDDEN)
# Called by pirate_waves.7
country_event = {
	id = pirate_waves.6
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_pirate_waves_active = yes
	}
	
	immediate = {
		# Go through every pirate station that needs to be managed
		every_owned_fleet = {
			limit = {
				has_fleet_flag = pirate_waves_station_flag
				NOT = {
					has_fleet_flag = pirate_waves_station_life_flag
				}
			}
			
			# Spawn a new fleet from this station immediately
			fleet_event = {
				id = pirate_waves.2
			}
			fleet_event = {
				id = pirate_waves.2
			}
			#fleet_event = {
			#	id = pirate_waves.69
			#}
			# Lets spawn a freehold
			#fleet_event = {
			#	id = pirate_waves.12
			#}
			
			# Destroy the station
			# log = "Pirate Station '[This.GetName]' has build a Pirate Fleet and is destroyed..."
				
			destroy_fleet = THIS
		}
	}
}

# Manage Pirate Stations (HIDDEN)
# Called monthly
event = {
	id = pirate_waves.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_pirate_waves_active = yes
		exists = event_target:pirate_waves_country
		exists = event_target:pirate_waves_2_country
	}
		
	immediate = {
		# Go through every pirate waves country
		every_country = {
			limit = {
				is_country_type = pirate_waves_country
			}
			
			# Execute as a country event as that won't be destroyed
			country_event = {
				id = pirate_waves.6
				days = 1
				random = 29
			}
		}
	}
}

# Pirate Admiral Dies (HIDDEN)
# Called when a leader dies.
country_event = {
	id = pirate_waves.20
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = pirate_waves_country
		from = {
			exists = fleet
			leader_class = admiral
			has_leader_flag = pirate_waves_leader
		}
	}

	immediate = {
		from = {
			fleet = { 
				set_fleet_flag = pirate_waves_destroy_fleet
			} 
		}
	}
}

#################################################
#	Kill Counters								#
#################################################

# Killer Count (HIDDEN)
country_event = {
	id = pirate_waves.8
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_country_type = pirate
			is_country_type = pirate_waves_country
			is_pirate = yes
			is_country_type = dormant_marauders
			is_country_type = ruined_marauders
			is_country_type = awakened_marauders
			is_country_type = marauder_raiders
		}
		exists = FROM
	}
	
	immediate = {
		# Give resources based on ship type
		add_pirate_waves_kill_reward = yes
	
		# Event chain management
		add_pirate_waves_pirate_event_chain = yes
		
		# FROM killed a ship of THIS
		if = {
			limit = {
				FROM = { 
					has_event_chain = "pirate_waves_pirate_event_chain"
				}
			}
			
			FROM = {
				add_event_chain_counter = { 
					event_chain = "pirate_waves_pirate_event_chain" 
					counter = "pirate_kills_us" 
					amount = 1 
				}
			}
		}
		
		# Let other countries know we killed one
		if = {
			limit = {
				FROM = {
					OR = {
						is_country_type = pirate
						is_country_type = pirate_waves_country
						is_pirate = yes
						is_country_type = dormant_marauders
						is_country_type = ruined_marauders
						is_country_type = awakened_marauders
						is_country_type = marauder_raiders
					}
				}
			}
			
			# Pirate on pirate kill
			every_country = {
				limit = { 
					has_event_chain = "pirate_waves_pirate_event_chain" 
				}
				
				add_event_chain_counter = { 
					event_chain = "pirate_waves_pirate_event_chain" 
					counter = "pirate_kills_pirates" 
					amount = 1 
				}
			}
		}
			
		# Some hero killed the pirate
		else = {
			every_country = {
				limit = { 
					has_event_chain = "pirate_waves_pirate_event_chain" 
					NOT = { is_same_value = FROM }
				}
				
				add_event_chain_counter = { 
					event_chain = "pirate_waves_pirate_event_chain" 
					counter = "pirate_kills_others" 
					amount = 1 
				}
			}
		}
	}
}

# Victims (HIDDEN)
country_event = {
	id = pirate_waves.9
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_country_type = pirate
			is_country_type = pirate_waves_country
			is_pirate = yes
			is_country_type = dormant_marauders
			is_country_type = ruined_marauders
			is_country_type = awakened_marauders
			is_country_type = marauder_raiders
		}
		exists = FROM
	}
	
	immediate = {
		add_pirate_waves_pirate_event_chain = yes
		
		# THIS killed a ship of FROM
		if = {
			limit = {
				FROM = { 
					has_event_chain = "pirate_waves_pirate_event_chain"
				}
			}
			
			FROM = {
				add_event_chain_counter = { 
					event_chain = "pirate_waves_pirate_event_chain" 
					counter = "pirate_victims_us" 
					amount = 1
				}
			}
		}
	
		# It only counts as being a victim if you're not a pirate (for other countries, at least)
		if = {
			limit = {
				NOT = {
					FROM = {
						OR = {
							is_country_type = pirate
							is_country_type = pirate_waves_country
							is_pirate = yes
							is_country_type = dormant_marauders
							is_country_type = ruined_marauders
							is_country_type = awakened_marauders
							is_country_type = marauder_raiders
						}
					}
				}
			}
			
			every_country = {
				limit = { 
					has_event_chain = "pirate_waves_pirate_event_chain" 
					NOT = { is_same_value = FROM }
				}
				
				add_event_chain_counter = { 
					event_chain = "pirate_waves_pirate_event_chain" 
					counter = "pirate_victims_others" 
					amount = 1 
				}
			}
		}
	}
}

#########################################
#	NOTIFICATION						#
#########################################

# Pirates Waves notification
# Called from pirate_waves.3
country_event = {
	id = pirate_waves.50
	title = "pirate_waves.50.name"
	picture = GFX_evt_pirate_armada
	desc = pirate_waves.50.desc
	show_sound = event_ship_bridge
	location = event_target:spawn_location
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = pirate_waves_notifications_disabled
		}
	}

	option = {
		name = pirate_waves.50.a
	}
}

# Pirates Waves notification toggler
# Called manually
country_event = {
	id = pirate_waves.51
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = pirate_waves_notifications_disabled
			}
		
			remove_global_flag = pirate_waves_notifications_disabled
		}
		
		else = {
			set_global_flag = pirate_waves_notifications_disabled
		}
	}
}

#########################################
#	DEBUGGING							#
#########################################

# Creates one pirate fleet immediately (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.11
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		create_pirate_waves_countries = yes
	
		# Choose a random player country to hook the events to
		random_country = {
			limit = {
				is_pirate_waves_player = yes
			}
			
			country_event = { id = pirate_waves.4 }
		}
	}
}

# Creates ten pirate fleets immediately (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.10
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		create_pirate_waves_countries = yes
	
		# Choose a random player country to hook the events to
		random_country = {
			limit = {
				is_pirate_waves_player = yes
			}
			
			while = {
				count = 10
				
				country_event = { id = pirate_waves.4 }
			}
		}
	}
}

event = {
	id = pirate_waves.71
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		event = { id = pirate_waves.10 }
	}
}

# Creates a hundred pirate fleets and stations immediately (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.100
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
	
		create_pirate_waves_countries = yes
		# Choose a random player country to hook the events to
		random_country = {
			limit = {
				is_pirate_waves_player = yes
			}
			
			while = {
				count = 100
				
				country_event = { id = pirate_waves.4 }
			}
		}
	}
}

# Creates a thousand pirate fleets and stations immediately (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.1000
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		create_pirate_waves_countries = yes
		
		# Choose a random player country to hook the events to
		random_country = {
			limit = {
				is_pirate_waves_player = yes
			}
			
			while = {
				count = 10
				
				country_event = { id = pirate_waves.4 }
			}
		}
	}
}

# Tries to fix any bugs by destroying the pirate countries and recreate them (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.666
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {	
		if = {
			limit = {
				exists = event_target:pirate_waves_country
			}
			
			event_target:pirate_waves_country = {
				destroy_country = yes
			}
		}
		
		if = {
			limit = {
				exists = event_target:pirate_waves_2_country
			}
			
			event_target:pirate_waves_2_country = {
				destroy_country = yes
			}
		}
	}
}

# Remove all pirate countries (HIDDEN)
# Called through the console
event = {
	id = pirate_waves.667
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {	
		every_country = {
			limit = {
				is_pirate = yes
			}
			
			destroy_country = yes
		}
	}
}
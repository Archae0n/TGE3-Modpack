# Set up trade route
decision_kiyo_mod_trade_setup_trade_route = {
	owned_planets_only = yes
	
	potential = { owner = { is_gestalt = no is_country_type = default has_technology = tech_colonial_centralization } }
	
	allow = {
		custom_tooltip = {
			# Has enough trade routes
			fail_text = decision_kiyo_mod_trade_setup_trade_route_max_trade_routes
			if = { limit = { owner = { check_variable = { which = kiyo_trade_num_trade_routes value > 0 } } }
				owner = { check_variable = { which = kiyo_trade_num_trade_routes value < kiyo_trade_max_trade_routes } }
			}
			else = { always = yes }
		}
		num_buildings = { type = any value >= 5 }
		count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 20 }
		if = { limit = { owner = { is_ai = yes } }
			solar_system = { NOT = { any_ship_in_system = { owner = { is_hostile = root.owner } } } }
			any_country = {
				is_country_type = default
				opinion = { who = prev.owner value >= 25 }
				NOT = {
					is_country = prev.owner
					has_closed_borders = root.owner
					is_at_war_with = root.owner
				}
				any_owned_planet = {
					NOR = {
						AND = {
							prev.owner = {
								has_monthly_income = { resource = food value < 0 }
								prev.owner = { any_owned_planet = { has_designation = col_farming } }
							}
							NOT = { has_designation = col_farming }
						}
						AND = {
							count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count < 30 }
							prev.owner = { any_owned_planet = { count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 30 } } }
						}
						root.owner = {
							any_owned_fleet = {
								has_fleet_flag = kiyo_trade_start@ROOT
								NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
								OR = {
									has_fleet_flag = kiyo_trade_end@PREVPREV
									has_fleet_flag = kiyo_trade_going@PREVPREV
								}
							}
						}
					}
					solar_system = { has_access_fleet = root.owner }
					root.owner = {
						NOT = {
							any_owned_fleet = {
								has_fleet_flag = kiyo_trade_start@ROOT
								NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
								OR = {
									has_fleet_flag = kiyo_trade_end@PREVPREV
									has_fleet_flag = kiyo_trade_going@PREVPREV
								}
							}
						}
						OR = {
							AND = {
								has_technology = tech_thrusters_2
								OR = {
									AND = {
										NOT = { has_technology = tech_wormhole_stabilization }
										prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 18 } }
									}
									prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 18 } }
								}
							}
							AND = {
								has_technology = tech_thrusters_3
								OR = {
									AND = {
										NOT = { has_technology = tech_wormhole_stabilization }
										prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 20 } }
									}
									prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 20 } }
								}
							}
							AND = {
								has_technology = tech_thrusters_4
								OR = {
									AND = {
										NOT = { has_technology = tech_wormhole_stabilization }
										prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 22 } }
									}
									prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 22 } }
								}
							}
							AND = {
								has_technology = tech_dark_matter_propulsion
								OR = {
									AND = {
										NOT = { has_technology = tech_wormhole_stabilization }
										prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 25 } }
									}
									prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 25 } }
								}
							}
							AND = {
								NOT = { has_technology = tech_wormhole_stabilization }
								prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 15 } }
							}
							prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 15 } }
						}
					}
				}
			}
		}
	}
	
	resources = {
		category = campaign_kiyo_mod_trade
		cost = {
			trigger = { owner = { is_ai = no } }
			energy = 750
			consumer_goods = 750
		}
		cost = {
			trigger = { owner = { is_ai = yes } }
			energy = 500
			minerals = 1000
		}
	}
	
	effect = {
		custom_tooltip = decision_kiyo_mod_trade_setup_trade_route_effects
		hidden_effect = {log = "pre [Owner.GetName], [This.GetName], [Owner.kiyo_trade_num_trade_routes]/[Owner.kiyo_trade_max_trade_routes]"
			save_event_target_as = kiyo_trade_orbit
			if = { limit = { owner = { is_ai = yes } }
				create_fleet = {
					name = "Cargo from [Prev.GetName] (Cargo Size: 1/[Prev.Owner.kiyo_trade_max_cargo_ships_per_fleet])"
					effect = {
						set_owner = prev.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						set_fleet_flag = kiyo_trade_start@PREV
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						fleet_event = { id = kiyo_trade_manual_event.0 }
						# TODO
						random_country = {
							limit = {
								is_country_type = default
								opinion = { who = prev.owner value >= 25 }
								NOT = {
									is_country = prev.owner
									has_closed_borders = root.owner
									is_at_war_with = root.owner
								}
								any_owned_planet = {
									NOR = {
										AND = {
											prev.owner = {
												has_monthly_income = { resource = food value < 0 }
												prev.owner = { any_owned_planet = { has_designation = col_farming } }
											}
											NOT = { has_designation = col_farming }
										}
										AND = {
											count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count < 30 }
											prev.owner = { any_owned_planet = { count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 30 } } }
										}
										root.owner = {
											any_owned_fleet = {
												has_fleet_flag = kiyo_trade_start@ROOT
												NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
												OR = {
													has_fleet_flag = kiyo_trade_end@PREVPREV
													has_fleet_flag = kiyo_trade_going@PREVPREV
												}
											}
										}
									}
									root.owner = {
										OR = {
											AND = {
												has_technology = tech_thrusters_2
												OR = {
													AND = {
														NOT = { has_technology = tech_wormhole_stabilization }
														prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 18 } }
													}
													prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 18 } }
												}
											}
											AND = {
												has_technology = tech_thrusters_3
												OR = {
													AND = {
														NOT = { has_technology = tech_wormhole_stabilization }
														prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 20 } }
													}
													prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 20 } }
												}
											}
											AND = {
												has_technology = tech_thrusters_4
												OR = {
													AND = {
														NOT = { has_technology = tech_wormhole_stabilization }
														prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 22 } }
													}
													prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 22 } }
												}
											}
											AND = {
												has_technology = tech_dark_matter_propulsion
												OR = {
													AND = {
														NOT = { has_technology = tech_wormhole_stabilization }
														prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 25 } }
													}
													prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 25 } }
												}
											}
											AND = {
												NOT = { has_technology = tech_wormhole_stabilization }
												prev = { distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 15 } }
											}
											prev = { distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 15 } }
										}
									}
								}
							}
							weights = {
								base = 1
								modifier = {
									add = 2
									is_in_federation_with = prev.owner
								}
								modifier = {
									mult = 5
									is_neighbor_of = prev.owner
								}
							}
							random_owned_planet = {
								limit = {
									NOR = {
										AND = {
											prev.owner = {
												has_monthly_income = { resource = food value < 0 }
												prev.owner = { any_owned_planet = { has_designation = col_farming } }
											}
											NOT = { has_designation = col_farming }
										}
										AND = {
											count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count < 30 }
											prev.owner = { any_owned_planet = { count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 30 } } }
										}
										root.owner = {
											any_owned_fleet = {
												has_fleet_flag = kiyo_trade_start@ROOT
												NOT = { has_fleet_flag = kiyo_event_trade_deleted_cargo }
												OR = {
													has_fleet_flag = kiyo_trade_end@PREVPREV
													has_fleet_flag = kiyo_trade_going@PREVPREV
												}
											}
										}
									}
								}
								weights = {
									base = 1
									modifier = {
										add = 1
										count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 30 }
									}
									modifier = {
										add = 1
										count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 50 }
									}
									modifier = {
										add = 1
										count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 70 }
									}
									modifier = {
										add = 2
										count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 100 }
									}
									modifier = {
										add = 2
										count_pops = { limit = { kiyo_mod_trade_has_valid_trade_job = yes } count >= 150 }
									}
									modifier = {
										mult = 10
										is_capital = yes
									}
									modifier = {
										mult = 3
										if = { limit = { owner = { NOT = { has_technology = tech_wormhole_stabilization } } }
											distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 7 }
										}
										else = {
											distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 7 }
										}
									}
									modifier = {
										mult = 2
										if = { limit = { owner = { NOT = { has_technology = tech_wormhole_stabilization } } }
											distance = { source = root type = hyperlane use_bypasses = no min_jumps = 0 max_jumps = 11 }
										}
										else = {
											distance = { source = root type = hyperlane use_bypasses = yes min_jumps = 0 max_jumps = 11 }
										}
									}
								}
								save_event_target_as = kiyo_trade_partner
							}
						}
						queue_actions = { orbit_planet = event_target:kiyo_trade_partner }
						event_target:kiyo_trade_partner = { prev = { set_fleet_flag = kiyo_trade_going@PREV } }
					}
					settings = {
						can_upgrade = no
						can_disband = no
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
			}
			else = {
				create_fleet = {
					name = "Cargo from [Prev.GetName] (Cargo Size: 1/[Prev.Owner.kiyo_trade_max_cargo_ships_per_fleet])"
					effect = {
						set_owner = prev.owner
						set_location = {
							target = prev
							distance = 5
							angle = random
						}
						set_fleet_stance = passive
						
						create_ship = {
							name = "Cargo Ship"
							random_existing_design = kiyo_trade
							prefix = yes
							upgradable = yes
						}
						set_fleet_flag = kiyo_trade_start@PREV
						set_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value = 1 }
						fleet_event = { id = kiyo_trade_manual_event.0 }
					}
					settings = {
						can_upgrade = no
						can_disband = yes
						can_change_composition = no
						can_change_leader = no
						spawn_debris = yes
					}
				}
			}
		
			# Add 1 to number of current trade routes
			owner = { kiyo_mod_trade_set_num_trade_routes = yes }
			log = "post [Owner.GetName], [This.GetName], [Owner.kiyo_trade_num_trade_routes]/[Owner.kiyo_trade_max_trade_routes]"
		}
	}
	
	ai_weight = {
		weight = 20
		modifier = {
			factor = 0
			NOT = {
				any_country = {
					is_country_type = default
					has_commercial_pact = root.owner
					NOT = {
						is_country = root.owner
						has_closed_borders = root.owner
						is_at_war_with = root.owner
					}
				}
			}
		}
	}
}

# Add more cargo ships to trade route
decision_kiyo_mod_trade_add_ships_to_trade_route = {
	owned_planets_only = yes
	
	potential = {
		# Owner has a fleet with a trade route
		owner = { any_owned_fleet = { has_fleet_flag = kiyo_trade_has_trade_route } has_technology = tech_space_trading }
	}
	
	allow = {
		custom_tooltip = {
			fail_text = decision_kiyo_mod_trade_add_ships_to_trade_route_any_fleet_has_room
			owner = { any_owned_fleet = { has_fleet_flag = kiyo_trade_start@ROOT any_owned_ship = { is_ship_size = kiyo_trade } OR = { check_variable = { which = kiyo_trade_max_cargo_ships_per_fleet value < prev } has_fleet_flag = kiyo_event_trade_expired_cargo } } }
		}
		custom_tooltip = {
			fail_text = decision_kiyo_mod_trade_add_ships_to_trade_route_has_window
			owner = { NOT = { has_country_flag = kiyo_trade_add_cargo_window } }
		}
	}
	
	resources = {
		category = campaign_kiyo_mod_trade
		cost = {
			trigger = { owner = { is_ai = no } }
			energy = 750
			consumer_goods = 750
		}
		cost = {
			trigger = { owner = { is_ai = yes } }
			energy = 500
			minerals = 1000
		}
	}
	
	effect = {
		custom_tooltip = decision_kiyo_mod_trade_add_ships_to_trade_route_effects
		hidden_effect = {
			owner = { set_country_flag = kiyo_trade_add_cargo_window }
			planet_event = { id = kiyo_trade_manual_event.1 }
		}
	}
	
	ai_weight = {
		weight = 20
		modifier = {
			factor = 0
			owner = { is_at_war = yes }
		}
	}
}